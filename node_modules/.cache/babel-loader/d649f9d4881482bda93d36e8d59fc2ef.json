{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro-react-app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [stationList, setStationList] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [selectedStationName, setSelectedStationName] = useState(null);\n  const [currentTrains, setCurrentTrains] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`).then(data => setStationList(data.data.Stations));\n  }, []);\n\n  const handleStationSelect = event => {\n    setSelectedStation(event.target.value);\n    axios.get(`${process.env.REACT_APP_PREDICTION_API}/${event.target.value}?api_key=${process.env.REACT_APP_SECRET}`).then(payload => {\n      setcurrentStationName(payload.data.Trains[0].LocationName);\n      setCurrentTrains(payload.data.Trains);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"stations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Stations:\"), stationList.length && /*#__PURE__*/React.createElement(\"select\", {\n    name: \"stations\",\n    onChange: handleStationSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, stationList.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.Code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }, item.Name);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Current Station code: \", selectedStation, \" \", selectedStationName, \" \"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/leed/Documents/metro-react-app/src/App.js"],"names":["React","useEffect","useState","axios","App","stationList","setStationList","selectedStation","setSelectedStation","selectedStationName","setSelectedStationName","currentTrains","setCurrentTrains","get","process","env","REACT_APP_RAIL_INFO_API","REACT_APP_SECRET","then","data","Stations","handleStationSelect","event","target","value","REACT_APP_PREDICTION_API","payload","setcurrentStationName","Trains","LocationName","length","map","item","Code","Name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,sBAAqBF,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAAnG,EACGC,IADH,CACSC,IAAD,IAAUb,cAAc,CAACa,IAAI,CAACA,IAAL,CAAUC,QAAX,CADhC;AAED,GAHQ,EAGN,EAHM,CAAT;;AAQA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrCd,IAAAA,kBAAkB,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AAGArB,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYU,wBAAyB,IAAGH,KAAK,CAACC,MAAN,CAAaC,KAAM,YAAWV,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAAhH,EACGC,IADH,CACQQ,OAAO,IAAI;AAEfC,MAAAA,qBAAqB,CAACD,OAAO,CAACP,IAAR,CAAaS,MAAb,CAAoB,CAApB,EAAuBC,YAAxB,CAArB;AACAjB,MAAAA,gBAAgB,CAACc,OAAO,CAACP,IAAR,CAAaS,MAAd,CAAhB;AAED,KANH;AAQD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGvB,WAAW,CAACyB,MAAZ,iBACD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,QAAQ,EAAET,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,WAAW,CAAC0B,GAAZ,CAAiBC,IAAD,IAAU;AACzB,wBAAO;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,IAAI,CAACE,IAAhC,CAAP;AACD,GAFA,CADH,CAHF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA4B3B,eAA5B,OAA8CE,mBAA9C,MATF,CADF;AAaD,CA1CD;;AA4CA,eAAeL,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n\n  const [stationList, setStationList] = useState([])\n  const [selectedStation, setSelectedStation] = useState(null)\n  const [selectedStationName, setSelectedStationName] = useState(null)\n  const [currentTrains, setCurrentTrains] = useState([])\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`)\n      .then((data) => setStationList(data.data.Stations));\n  }, [])\n\n  \n\n\n  const handleStationSelect = (event) => {\n    setSelectedStation(event.target.value)\n\n    \n    axios.get(`${process.env.REACT_APP_PREDICTION_API}/${event.target.value}?api_key=${process.env.REACT_APP_SECRET}`)\n      .then(payload => {\n        \n        setcurrentStationName(payload.data.Trains[0].LocationName)\n        setCurrentTrains(payload.data.Trains)\n        \n      })\n  \n  }\n\n  return (\n    <div className=\"App\">\n      <label htmlFor='stations'>Stations:</label>\n      {stationList.length && (\n      <select name='stations' onChange={handleStationSelect}>\n        {stationList.map((item) => {\n          return(<option value={item.Code}>{item.Name}</option>)\n        })}\n      </select> )}\n\n      <div>Current Station code: {selectedStation} {selectedStationName} </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}