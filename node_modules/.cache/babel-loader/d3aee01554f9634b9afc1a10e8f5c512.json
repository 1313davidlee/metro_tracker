{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/linemap.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst LineMap = props => {\n  const [lineData, setLineData] = useState(null);\n  const [lineName, setLineName] = useState(null);\n  const [lineRoute, setLineRoute] = useState([]);\n  useEffect(() => {\n    if (props.lineMap) {\n      axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        var lineArray = data.data.Lines;\n        lineArray.map(line => {\n          if (line.LineCode === props.lineMap) {\n            setLineName(line.DisplayName);\n            setLineData(line);\n          }\n        });\n      });\n    }\n  }, [props.lineMap]);\n  useEffect(() => {\n    if (lineData) {\n      var station1 = lineData.StartStationCode;\n      var station2 = lineData.EndStationCode;\n      axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        setLineRoute(data.data.Path);\n        console.log(data.data.Path);\n      });\n    }\n  }, [lineData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Map of the \", lineName, \" line\"), lineRoute.length && lineRoute.map((stop, i) => {\n    console.log(i);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row vertical_align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stopIconBorder centerContent vertical_center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stopIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, stop.StationName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stopLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }));\n  }));\n};\n\nexport default LineMap;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/linemap.js"],"names":["React","useEffect","useState","useContext","axios","LineMap","props","lineData","setLineData","lineName","setLineName","lineRoute","setLineRoute","lineMap","get","process","env","REACT_APP_LINE_API","REACT_APP_SECRET","then","data","lineArray","Lines","map","line","LineCode","DisplayName","station1","StartStationCode","station2","EndStationCode","REACT_APP_STATION_PATH_API","Path","console","log","length","stop","i","StationName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n\nconst LineMap = props => {\n    const [lineData, setLineData] = useState(null)\n    const [lineName, setLineName] = useState(null)\n    const [lineRoute, setLineRoute] = useState([])\n\n    useEffect(() => {\n        if(props.lineMap){\n            axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                var lineArray = data.data.Lines\n                lineArray.map((line) => {\n                    if (line.LineCode === props.lineMap){\n                        setLineName(line.DisplayName)\n                        setLineData(line)\n                    }  \n                })\n            })\n        }\n    }, [props.lineMap])\n\n\n    useEffect(() => {\n        if(lineData){\n            var station1 = lineData.StartStationCode\n            var station2 = lineData.EndStationCode\n            axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                setLineRoute(data.data.Path)\n                console.log(data.data.Path)\n\n            })\n        }\n    }, [lineData])\n\n    return(\n        <div >\n            <div>Map of the {lineName} line</div>\n            {lineRoute.length && lineRoute.map((stop, i) => {\n                console.log(i)\n                return(\n                    <div>\n                        <div className='row vertical_align'>\n                            <div className='stopIconBorder centerContent vertical_center'>\n                                <div className='stopIcon'></div>\n                            </div>\n                            <div className='spaceLeft'>{stop.StationName}</div>\n\n                            \n                        </div>\n\n                        <div className='stopLine'></div>\n                    </div>\n\n                )\n            })}\n\n        </div>\n        \n        \n\n    )\n}\n\nexport default LineMap"]},"metadata":{},"sourceType":"module"}