{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/linemap.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst LineMap = props => {\n  const [lineData, setLineData] = useState({});\n  const [lineRoute, setLineRoute] = useState({});\n  useEffect(() => {\n    if (props.lineMap) {\n      axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        var lineArray = data.data.Lines;\n        lineArray.map(line => {\n          if (line.LineCode = \"YL\") {\n            console.log(line);\n          }\n        });\n      });\n    }\n  }, [props.lineMap]);\n  /*\n      useEffect(() => {\n          axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`)\n          .then(data => {set\n          })\n      })*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"linemap of \", props.lineMap);\n};\n\nexport default LineMap;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/linemap.js"],"names":["React","useEffect","useState","useContext","axios","LineMap","props","lineData","setLineData","lineRoute","setLineRoute","lineMap","get","process","env","REACT_APP_LINE_API","REACT_APP_SECRET","then","data","lineArray","Lines","map","line","LineCode","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,KAAK,CAACK,OAAT,EAAiB;AACbP,MAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,YAAWF,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAApF,EACCC,IADD,CACMC,IAAI,IAAI;AACV,YAAIC,SAAS,GAAGD,IAAI,CAACA,IAAL,CAAUE,KAA1B;AACAD,QAAAA,SAAS,CAACE,GAAV,CAAeC,IAAD,IAAU;AACpB,cAAIA,IAAI,CAACC,QAAL,GAAgB,IAApB,EAAyB;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;AAEJ,SALD;AAOH,OAVD;AAWH;AACJ,GAdQ,EAcN,CAAChB,KAAK,CAACK,OAAP,CAdM,CAAT;AAgBJ;;;;;;;AAOI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBL,KAAK,CAACK,OAAvB,CADJ;AAGH,CA9BD;;AAgCA,eAAeN,OAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst LineMap = props => {\n    const [lineData, setLineData] = useState({})\n    const [lineRoute, setLineRoute] = useState({})\n\n    useEffect(() => {\n        if(props.lineMap){\n            axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                var lineArray = data.data.Lines\n                lineArray.map((line) => {\n                    if (line.LineCode = \"YL\"){\n                        console.log(line)\n                    }\n                        \n                })\n\n            })\n        }\n    }, [props.lineMap])\n\n/*\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`)\n        .then(data => {set\n        })\n    })*/\n\n    return(\n        <div>linemap of {props.lineMap}</div>\n    )\n}\n\nexport default LineMap"]},"metadata":{},"sourceType":"module"}