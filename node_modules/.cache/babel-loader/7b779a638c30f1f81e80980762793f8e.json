{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/linemap.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst LineMap = props => {\n  const [lineData, setLineData] = useState(null);\n  const [lineName, setLineName] = useState(null);\n  const [lineRoute, setLineRoute] = useState([]);\n  const [currentStation, setCurrentStation] = useState(null);\n  const [incidentList, setIncidentList] = useState([]);\n  const [finalIncidentList, setFinalIncidentList] = useState([]);\n  useEffect(() => {\n    document.getElementById(\"lineMapParent\").style.display = 'none';\n  }, []);\n  useEffect(() => {\n    if (props.lineMap) {\n      axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        var lineArray = data.data.Lines;\n        lineArray.map(line => {\n          if (line.LineCode === props.lineMap) {\n            setLineName(line.DisplayName);\n            setLineData(line);\n          }\n        });\n      });\n    }\n  }, [props.lineMap]);\n  useEffect(() => {\n    if (props.currentStation) {\n      setCurrentStation(props.currentStation);\n    }\n  }, [props.currentStation]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_INCIDENT_API}?api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n      setIncidentList(data.data.Incidents);\n    });\n  }, []);\n  useEffect(() => {\n    if (lineData) {\n      var station1 = lineData.StartStationCode;\n      var station2 = lineData.EndStationCode;\n      axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        setLineRoute(data.data.Path);\n        console.log(data.data.Path);\n      });\n    }\n  }, [lineData]);\n\n  function getCustomColor(line) {\n    switch (line) {\n      case 'RD':\n        return '#f76f6f';\n\n      case 'BL':\n        return '#8fc1ff';\n\n      case 'OR':\n        return '#ff9900';\n\n      case 'GR':\n        return '#abd1af';\n\n      case 'SV':\n        return '#c2c2c2';\n\n      case 'YL':\n        return '#ffe999';\n    }\n  }\n\n  useEffect(() => {\n    if (props.lineMap && incidentList) {\n      const incidentArray = [];\n      var line = props.lineMap;\n      incidentList.map(incident => {\n        if (incident.LinesAffected.includes(line)) {\n          if (!incidentArray.includes(incident.Description)) {\n            console.log('mango');\n            incidentArray.push(incident.Description);\n          }\n        }\n      });\n      setFinalIncidentList(incidentArray);\n    }\n  }, [incidentList, props.lineMap]);\n\n  const handleMapClose = () => {\n    document.getElementById(\"lineMapParent\").style.display = 'none';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"lineMapParent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"double_bottom_space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 54\n    }\n  }, \"Map of the \", lineName, \" line\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cursor extraExtraSpaceLeft\",\n    onClick: handleMapClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 86\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Incidents on this line:\"), finalIncidentList.length && finalIncidentList.map(incident => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceTop incident spaceBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, incident);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  })), lineRoute.length && lineRoute.map((stop, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row vertical_align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stopIconBorder centerContent vertical_center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: getCustomColor(stop.LineCode)\n      },\n      className: \"stopIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    })), currentStation && currentStation === stop.StationCode ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceLeft medTitle spaceTop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 78\n      }\n    }, stop.StationName)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceLeft  spaceTop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, stop.StationName)), i === lineRoute.length - 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 55\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stopLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 88\n      }\n    }));\n  }));\n};\n\nexport default LineMap;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/linemap.js"],"names":["React","useEffect","useState","axios","LineMap","props","lineData","setLineData","lineName","setLineName","lineRoute","setLineRoute","currentStation","setCurrentStation","incidentList","setIncidentList","finalIncidentList","setFinalIncidentList","document","getElementById","style","display","lineMap","get","process","env","REACT_APP_LINE_API","REACT_APP_SECRET","then","data","lineArray","Lines","map","line","LineCode","DisplayName","REACT_APP_INCIDENT_API","Incidents","station1","StartStationCode","station2","EndStationCode","REACT_APP_STATION_PATH_API","Path","console","log","getCustomColor","incidentArray","incident","LinesAffected","includes","Description","push","handleMapClose","length","stop","i","backgroundColor","StationCode","StationName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAGA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAAC,EAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXiB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,OAA/C,GAAyD,MAAzD;AAEH,GAHQ,EAGN,EAHM,CAAT;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,KAAK,CAACiB,OAAT,EAAiB;AACbnB,MAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,YAAWF,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAApF,EACCC,IADD,CACMC,IAAI,IAAI;AACV,YAAIC,SAAS,GAAGD,IAAI,CAACA,IAAL,CAAUE,KAA1B;AACAD,QAAAA,SAAS,CAACE,GAAV,CAAeC,IAAD,IAAU;AACpB,cAAIA,IAAI,CAACC,QAAL,KAAkB7B,KAAK,CAACiB,OAA5B,EAAoC;AAChCb,YAAAA,WAAW,CAACwB,IAAI,CAACE,WAAN,CAAX;AACA5B,YAAAA,WAAW,CAAC0B,IAAD,CAAX;AAEH;AACJ,SAND;AAOH,OAVD;AAWH;AACJ,GAdQ,EAcN,CAAC5B,KAAK,CAACiB,OAAP,CAdM,CAAT;AAgBArB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGI,KAAK,CAACO,cAAT,EAAwB;AACpBC,MAAAA,iBAAiB,CAACR,KAAK,CAACO,cAAP,CAAjB;AACH;AACJ,GAJQ,EAIN,CAACP,KAAK,CAACO,cAAP,CAJM,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYW,sBAAuB,YAAWZ,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAAxF,EACEC,IADF,CACQC,IAAD,IAAU;AACdd,MAAAA,eAAe,CAACc,IAAI,CAACA,IAAL,CAAUQ,SAAX,CAAf;AACD,KAHF;AAID,GALM,EAKJ,EALI,CAAT;AAQApC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,QAAH,EAAY;AACR,UAAIgC,QAAQ,GAAGhC,QAAQ,CAACiC,gBAAxB;AACA,UAAIC,QAAQ,GAAGlC,QAAQ,CAACmC,cAAxB;AACAtC,MAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYiB,0BAA2B,oBAAmBJ,QAAS,kBAAiBE,QAAS,YAAWhB,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAAlJ,EACCC,IADD,CACMC,IAAI,IAAI;AACVlB,QAAAA,YAAY,CAACkB,IAAI,CAACA,IAAL,CAAUc,IAAX,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACA,IAAL,CAAUc,IAAtB;AAEH,OALD;AAMH;AACJ,GAXQ,EAWN,CAACrC,QAAD,CAXM,CAAT;;AAaA,WAASwC,cAAT,CAAwBb,IAAxB,EAA8B;AAC1B,YAAOA,IAAP;AACE,WAAK,IAAL;AACE,eAAO,SAAP;;AACF,WAAK,IAAL;AACE,eAAO,SAAP;;AACF,WAAK,IAAL;AACE,eAAO,SAAP;;AACF,WAAK,IAAL;AACE,eAAO,SAAP;;AACF,WAAK,IAAL;AACE,eAAO,SAAP;;AACF,WAAK,IAAL;AACE,eAAO,SAAP;AAZJ;AAcD;;AAGHhC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,KAAK,CAACiB,OAAN,IAAiBR,YAArB,EAAkC;AAC9B,YAAMiC,aAAa,GAAG,EAAtB;AACA,UAAId,IAAI,GAAG5B,KAAK,CAACiB,OAAjB;AACAR,MAAAA,YAAY,CAACkB,GAAb,CAAkBgB,QAAD,IAAc;AAC3B,YAAGA,QAAQ,CAACC,aAAT,CAAuBC,QAAvB,CAAgCjB,IAAhC,CAAH,EAAyC;AACrC,cAAI,CAACc,aAAa,CAACG,QAAd,CAAuBF,QAAQ,CAACG,WAAhC,CAAL,EAAkD;AAC9CP,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAE,YAAAA,aAAa,CAACK,IAAd,CAAmBJ,QAAQ,CAACG,WAA5B;AACH;AACJ;AACJ,OARD;AASAlC,MAAAA,oBAAoB,CAAC8B,aAAD,CAApB;AACH;AACJ,GAfQ,EAeN,CAACjC,YAAD,EAAeT,KAAK,CAACiB,OAArB,CAfM,CAAT;;AAiBA,QAAM+B,cAAc,GAAG,MAAM;AACzBnC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,OAA/C,GAAyD,MAAzD;AACH,GAFD;;AAQA,sBACI;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeb,QAAf,UAArC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAA4C,IAAA,OAAO,EAAE6C,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArE,CAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEKrC,iBAAiB,CAACsC,MAAlB,IAA4BtC,iBAAiB,CAACgB,GAAlB,CAAuBgB,QAAD,IAAc;AAC7D,wBACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDA,QAAhD,CADJ;AAGH,GAJ4B,CAFjC,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CALJ,EAeKtC,SAAS,CAAC4C,MAAV,IAAoB5C,SAAS,CAACsB,GAAV,CAAc,CAACuB,IAAD,EAAOC,CAAP,KAAa;AAC5C,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAEX,cAAc,CAACS,IAAI,CAACrB,QAAN;AAAhC,OAAZ;AAA8D,MAAA,SAAS,EAAC,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAIMtB,cAAc,IAAIA,cAAc,KAAK2C,IAAI,CAACG,WAA1C,gBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACI,WAAT,CAA7C,CADF,gBAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCJ,IAAI,CAACI,WAA3C,CANR,CADJ,EAUKH,CAAC,KAAK9C,SAAS,CAAC4C,MAAV,GAAmB,CAAzB,gBAA6B;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,gBAA8D;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVnE,CADJ;AAeH,GAhBoB,CAfzB,CADJ;AA2CH,CA/ID;;AAiJA,eAAelD,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n\nconst LineMap = props => {\n    const [lineData, setLineData] = useState(null)\n    const [lineName, setLineName] = useState(null)\n    const [lineRoute, setLineRoute] = useState([])\n    const [currentStation, setCurrentStation] = useState(null)\n    const [incidentList, setIncidentList] = useState([])\n    const [finalIncidentList, setFinalIncidentList] = useState([])\n\n    useEffect(() =>{\n        document.getElementById(\"lineMapParent\").style.display = 'none'\n\n    }, [])\n\n\n    useEffect(() => {\n        if(props.lineMap){\n            axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                var lineArray = data.data.Lines\n                lineArray.map((line) => {\n                    if (line.LineCode === props.lineMap){\n                        setLineName(line.DisplayName)\n                        setLineData(line)\n                    \n                    }  \n                })\n            })\n        }\n    }, [props.lineMap])\n\n    useEffect(()=>{\n        if(props.currentStation){\n            setCurrentStation(props.currentStation)\n        }\n    }, [props.currentStation])\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_INCIDENT_API}?api_key=${process.env.REACT_APP_SECRET}`)\n         .then((data) => {\n           setIncidentList(data.data.Incidents)\n         })\n      }, [])\n\n\n    useEffect(() => {\n        if(lineData){\n            var station1 = lineData.StartStationCode\n            var station2 = lineData.EndStationCode\n            axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                setLineRoute(data.data.Path)\n                console.log(data.data.Path)\n\n            })\n        }\n    }, [lineData])\n\n    function getCustomColor(line) {\n        switch(line) {\n          case 'RD':\n            return '#f76f6f'\n          case 'BL':\n            return '#8fc1ff'\n          case 'OR':\n            return '#ff9900'\n          case 'GR':\n            return '#abd1af'\n          case 'SV':\n            return '#c2c2c2'\n          case 'YL':\n            return '#ffe999'\n        }\n      }\n\n\n    useEffect(() => {\n        if (props.lineMap && incidentList){\n            const incidentArray = []\n            var line = props.lineMap\n            incidentList.map((incident) => {\n                if(incident.LinesAffected.includes(line)){\n                    if (!incidentArray.includes(incident.Description)){\n                        console.log('mango')\n\n                        incidentArray.push(incident.Description)\n                    }\n                }\n            })\n            setFinalIncidentList(incidentArray)\n        }\n    }, [incidentList, props.lineMap])\n\n    const handleMapClose = () => {\n        document.getElementById(\"lineMapParent\").style.display = 'none'\n    }\n\n   \n\n    \n\n    return( \n        <div id='lineMapParent'>\n            <div className='row'>\n                <div className='double_bottom_space'><b>Map of the {lineName} line</b></div>\n                <div className='cursor extraExtraSpaceLeft' onClick={handleMapClose}><b>X</b></div>\n            </div>\n            <div>\n                <b>Incidents on this line:</b>\n                {finalIncidentList.length && finalIncidentList.map((incident) => {\n                    return(\n                        <div className='spaceTop incident spaceBottom'>{incident}</div>\n                    )\n                })}\n                <div>\n                </div>\n            </div>\n            {lineRoute.length && lineRoute.map((stop, i) => {\n                return(\n                    <div>\n                        <div className='row vertical_align'>\n                            <div className='stopIconBorder centerContent vertical_center'>\n                                <div style={{backgroundColor: getCustomColor(stop.LineCode)}} className='stopIcon'></div>\n                            </div>\n                            { currentStation && currentStation === stop.StationCode ? \n                                <div className='spaceLeft medTitle spaceTop'><b>{stop.StationName}</b></div>:\n                                <div className='spaceLeft  spaceTop'>{stop.StationName}</div>\n                            }       \n                        </div>\n                        {i === lineRoute.length - 1 ? <div className='spacer'></div> : <div className='stopLine'></div>}\n                    </div>\n\n                )\n            })}\n\n        </div>\n\n        \n        \n\n        \n        \n\n    )\n}\n\nexport default LineMap"]},"metadata":{},"sourceType":"module"}