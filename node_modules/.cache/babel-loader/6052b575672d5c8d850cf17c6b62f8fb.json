{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/positions.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LineMap from './linemap.js';\nimport './App.css';\n\nconst PositionMap = props => {\n  const [positions, setPositions] = useState(null);\n  const [lineCode, setLineCode] = useState('BL');\n  const [currentLine, setCurrentLine] = useState(null);\n  const [trainLocations, setTrainLocations] = useState(null);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_POSITION_API}StandardRoutes?contentType=json&api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n      setPositions(data.data.StandardRoutes);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_TRAIN_POSITION_API}?contentType=json&api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n      console.log('curr pos loc', data);\n    });\n  });\n  useEffect(() => {\n    if (positions && lineCode) {\n      positions.map(line => {\n        if (line.LineCode === lineCode) {\n          setCurrentLine(line);\n          console.log('blah', line);\n        }\n      });\n    }\n  }, [lineCode, positions]);\n\n  function fetchPositionData() {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"This is the psoitons map\"), currentLine && currentLine.TrackCircuits.map(point => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \" \", point.CircuitId, \" \", point.StationCode ? point.StationCode : '');\n  }), /*#__PURE__*/React.createElement(LineMap, {\n    lineMap: \"BL\",\n    currentStation: \"J02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PositionMap;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/positions.js"],"names":["React","useEffect","useState","axios","LineMap","PositionMap","props","positions","setPositions","lineCode","setLineCode","currentLine","setCurrentLine","trainLocations","setTrainLocations","get","process","env","REACT_APP_POSITION_API","REACT_APP_SECRET","then","data","StandardRoutes","REACT_APP_TRAIN_POSITION_API","console","log","map","line","LineCode","fetchPositionData","TrackCircuits","point","CircuitId","StationCode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,WAAP;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,IAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,2CAA0CF,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAAvH,EACEC,IADF,CACQC,IAAD,IAAU;AACdb,MAAAA,YAAY,CAACa,IAAI,CAACA,IAAL,CAAUC,cAAX,CAAZ;AACD,KAHF;AAID,GALM,EAKJ,EALI,CAAT;AAOErB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYM,4BAA6B,6BAA4BP,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAA/G,EACCC,IADD,CACOC,IAAD,IAAU;AACZG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B;AACH,KAHD;AAIH,GALQ,CAAT;AAOFpB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,SAAS,IAAIE,QAAhB,EAA0B;AACtBF,MAAAA,SAAS,CAACmB,GAAV,CAAeC,IAAD,IAAU;AACpB,YAAIA,IAAI,CAACC,QAAL,KAAkBnB,QAAtB,EAA+B;AAC3BG,UAAAA,cAAc,CAACe,IAAD,CAAd;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;AACH;AACJ,OALD;AAMH;AACJ,GATQ,EASN,CAAClB,QAAD,EAAWF,SAAX,CATM,CAAT;;AAWA,WAASsB,iBAAT,GAA6B,CAE5B;;AAMC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAGGlB,WAAW,IAEZA,WAAW,CAACmB,aAAZ,CAA0BJ,GAA1B,CAA+BK,KAAD,IAAW;AACrC,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOA,KAAK,CAACC,SAAb,OAAyBD,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAA1B,GAAwC,EAAjE,CADJ;AAGH,GAJD,CALF,eAYE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,IAAlB;AAAwB,IAAA,cAAc,EAAE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADJ;AAuBL,CA/DD;;AAiEA,eAAe5B,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LineMap from './linemap.js'\nimport './App.css';\n\n\nconst PositionMap = props => {\n\n    const [positions, setPositions] = useState(null)\n    const [lineCode, setLineCode] = useState('BL')\n    const [currentLine, setCurrentLine] = useState(null)\n    const [trainLocations, setTrainLocations] = useState(null)\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_POSITION_API}StandardRoutes?contentType=json&api_key=${process.env.REACT_APP_SECRET}`)\n         .then((data) => {\n           setPositions(data.data.StandardRoutes)\n         })\n      }, [])\n\n      useEffect(() => {\n          axios.get(`${process.env.REACT_APP_TRAIN_POSITION_API}?contentType=json&api_key=${process.env.REACT_APP_SECRET}`)\n          .then((data) => {\n              console.log('curr pos loc', data)\n          })\n      })\n\n    useEffect(() => {\n        if(positions && lineCode) {\n            positions.map((line) => {\n                if (line.LineCode === lineCode){\n                    setCurrentLine(line)\n                    console.log('blah', line)\n                }\n            })\n        }\n    }, [lineCode, positions])\n\n    function fetchPositionData() {\n\n    }\n\n\n\n\n\n      return(\n          <div>\n            <div>This is the psoitons map</div>\n            \n            {currentLine && \n            \n            currentLine.TrackCircuits.map((point) => {\n                return(\n                    <div> {point.CircuitId} {point.StationCode ? point.StationCode : ''}</div>\n                )\n            })\n        \n            }\n            <LineMap lineMap={\"BL\"} currentStation={\"J02\"}></LineMap>\n            \n          </div>\n\n          \n      )\n\n    \n\n\n}\n\nexport default PositionMap"]},"metadata":{},"sourceType":"module"}