{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/linemap.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst LineMap = props => {\n  const [lineData, setLineData] = useState(null);\n  const [lineRoute, setLineRoute] = useState({});\n  useEffect(() => {\n    if (props.lineMap) {\n      axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        var lineArray = data.data.Lines;\n        lineArray.map(line => {\n          if (line.LineCode === props.lineMap) {\n            console.log(line);\n            setLineData(line);\n          }\n        });\n      });\n    }\n  }, [props.lineMap]);\n  useEffect(() => {\n    if (lineData) {\n      var station1 = lineData.StartStationCode;\n      var station2 = lineData.EndStationCode;\n      axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`).then(data => {\n        setLineRoute(data.data.Path);\n      });\n    }\n  }, [lineData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"linemap of \", props.lineMap);\n};\n\nexport default LineMap;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/linemap.js"],"names":["React","useEffect","useState","useContext","axios","LineMap","props","lineData","setLineData","lineRoute","setLineRoute","lineMap","get","process","env","REACT_APP_LINE_API","REACT_APP_SECRET","then","data","lineArray","Lines","map","line","LineCode","console","log","station1","StartStationCode","station2","EndStationCode","REACT_APP_STATION_PATH_API","Path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,KAAK,CAACK,OAAT,EAAiB;AACbP,MAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,YAAWF,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAApF,EACCC,IADD,CACMC,IAAI,IAAI;AACV,YAAIC,SAAS,GAAGD,IAAI,CAACA,IAAL,CAAUE,KAA1B;AACAD,QAAAA,SAAS,CAACE,GAAV,CAAeC,IAAD,IAAU;AACpB,cAAIA,IAAI,CAACC,QAAL,KAAkBjB,KAAK,CAACK,OAA5B,EAAoC;AAChCa,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAd,YAAAA,WAAW,CAACc,IAAD,CAAX;AACH;AACJ,SALD;AAMH,OATD;AAUH;AACJ,GAbQ,EAaN,CAAChB,KAAK,CAACK,OAAP,CAbM,CAAT;AAgBAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,QAAH,EAAY;AACR,UAAImB,QAAQ,GAAGnB,QAAQ,CAACoB,gBAAxB;AACA,UAAIC,QAAQ,GAAGrB,QAAQ,CAACsB,cAAxB;AACAzB,MAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYgB,0BAA2B,oBAAmBJ,QAAS,kBAAiBE,QAAS,YAAWf,OAAO,CAACC,GAAR,CAAYE,gBAAiB,EAAlJ,EACCC,IADD,CACMC,IAAI,IAAI;AACVR,QAAAA,YAAY,CAACQ,IAAI,CAACA,IAAL,CAAUa,IAAX,CAAZ;AACH,OAHD;AAIH;AACJ,GATQ,EASN,CAACxB,QAAD,CATM,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBD,KAAK,CAACK,OAAvB,CADJ;AAGH,CAlCD;;AAoCA,eAAeN,OAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst LineMap = props => {\n    const [lineData, setLineData] = useState(null)\n    const [lineRoute, setLineRoute] = useState({})\n\n    useEffect(() => {\n        if(props.lineMap){\n            axios.get(`${process.env.REACT_APP_LINE_API}?api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                var lineArray = data.data.Lines\n                lineArray.map((line) => {\n                    if (line.LineCode === props.lineMap){\n                        console.log(line)\n                        setLineData(line)\n                    }  \n                })\n            })\n        }\n    }, [props.lineMap])\n\n\n    useEffect(() => {\n        if(lineData){\n            var station1 = lineData.StartStationCode\n            var station2 = lineData.EndStationCode\n            axios.get(`${process.env.REACT_APP_STATION_PATH_API}?FromStationCode=${station1}&ToStationCode=${station2}&api_key=${process.env.REACT_APP_SECRET}`)\n            .then(data => {\n                setLineRoute(data.data.Path)\n            })\n        }\n    }, [lineData])\n\n    return(\n        <div>linemap of {props.lineMap}</div>\n    )\n}\n\nexport default LineMap"]},"metadata":{},"sourceType":"module"}