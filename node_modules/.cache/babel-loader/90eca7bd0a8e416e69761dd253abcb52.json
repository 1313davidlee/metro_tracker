{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/App.js\";\nimport React, { useEffect, useState, createContext, useReducer } from 'react';\nimport { getDistance } from 'geolib';\nimport axios from 'axios';\nimport Route from './route.js';\nimport Tracker from './tracker.js';\nimport './App.css';\nexport const AppContext = createContext();\nconst initialState = {\n  stationList: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_INPUT':\n      return {\n        inputText: action.data\n      };\n\n    default:\n      return initialState;\n  }\n}\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [view, setView] = useState('plan');\n  const [stationList, setStationList] = useState([]);\n\n  const handleViewToggle = () => {\n    if (document.getElementById('track').clicked) {\n      console.log('blah');\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`).then(data => setStationList(data.data.Stations));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer title noBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"WMATA Live Train Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer column noBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom_space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    checked: true,\n    type: \"radio\",\n    id: \"track\",\n    name: \"view\",\n    value: \"track\",\n    onChange: handleViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \" space_left\",\n    htmlFor: \"track\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Train Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom_space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"space_right\",\n    type: \"radio\",\n    id: \"plan\",\n    name: \"view\",\n    value: \"plan\",\n    onChange: handleViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"space_left\",\n    htmlFor: \"plan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Trip Planner \"))), view === 'plan' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }\n  }, \"tracker\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 49\n    }\n  }, \"planner\"), /*#__PURE__*/React.createElement(Route, {\n    start: 'A06',\n    end: 'A09',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tracker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/App.js"],"names":["React","useEffect","useState","createContext","useReducer","getDistance","axios","Route","Tracker","AppContext","initialState","stationList","reducer","state","action","type","inputText","data","App","dispatch","view","setView","setStationList","handleViewToggle","document","getElementById","clicked","console","log","get","process","env","REACT_APP_RAIL_INFO_API","REACT_APP_SECRET","then","Stations"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createContext, useReducer } from 'react';\nimport { getDistance } from 'geolib';\nimport axios from 'axios';\nimport Route from './route.js'\nimport Tracker from './tracker.js'\nimport './App.css';\n\nexport const AppContext = createContext();\n\nconst initialState = {\n    stationList : []\n  \n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n      case 'UPDATE_INPUT':\n          return {\n              inputText: action.data\n          };\n      default:\n          return initialState;\n  }\n}\n\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const [view, setView] = useState('plan')\n  const [stationList, setStationList] = useState([])\n\n\n\n  const handleViewToggle = () => {\n    if(document.getElementById('track').clicked){\n      console.log('blah')\n    }\n  }\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`)\n        .then((data) => setStationList(data.data.Stations));\n    }, [])\n \n\n\n\n  return (\n    <div className=\"App row\">\n      <div className=''>\n        <div className='spacer title noBottom'>WMATA Live Train Tracker</div>\n        <div className='spacer column noBottom'>\n\n     \n          <div className='bottom_space'>\n            <input checked type=\"radio\" id=\"track\" name=\"view\" value=\"track\" onChange={handleViewToggle}></input>\n            <label className=' space_left' htmlFor='track'>Train Tracker</label>\n          </div>\n          <div className='bottom_space'>\n            <input className='space_right' type=\"radio\" id=\"plan\" name=\"view\" value=\"plan\" onChange={handleViewToggle}></input>\n            <label className='space_left' htmlFor='plan'>Trip Planner </label>\n          </div>\n        </div>\n\n        {view === 'plan' ? <div>tracker</div> : <div>planner</div>}\n        \n        <Route start={'A06'} end={'A09'}></Route>\n\n        <Tracker></Tracker>\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}