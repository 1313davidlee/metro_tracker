{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Route from './route.js';\nimport Tracker from './tracker.js';\nimport PositionMap from './positions.js';\nimport './App.css';\n\nconst App = () => {\n  const [view, setView] = useState('track');\n  const [stationList, setStationList] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [stationNames, setStationNames] = useState({});\n  useEffect(() => {\n    document.getElementById('track').checked = true;\n  }, []);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`).then(data => setStationList(data.data.Stations));\n  }, []);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    });\n  }, []);\n  useEffect(() => {\n    var temp_dict = {};\n\n    if (stationList.length) {\n      stationList.map(station => {\n        temp_dict[station.Code] = station.Name;\n      });\n      setStationNames(temp_dict);\n    }\n  }, [stationList]);\n\n  const handleViewToggle = () => {\n    if (document.getElementById('track').checked) {\n      setView('track');\n    } else if (document.getElementById('plan').checked) {\n      setView('plan');\n    } else {\n      setView('loc');\n    }\n  };\n\n  function renderMainBody() {\n    if (view === 'track') {\n      return /*#__PURE__*/React.createElement(Tracker, {\n        stationList: stationList,\n        currentLocation: currentLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      });\n    } else if (view === 'loc') {\n      return /*#__PURE__*/React.createElement(PositionMap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Route, {\n        stationList: stationList,\n        currentLocation: currentLocation,\n        start: 'A06',\n        end: 'A09',\n        stationNames: stationNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer title noBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"WMATA Live Train Tracker and Planner\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer column noBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom_space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"track\",\n    name: \"view\",\n    value: \"track\",\n    onClick: handleViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \" space_left\",\n    htmlFor: \"track\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Train Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom_space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"space_right\",\n    type: \"radio\",\n    id: \"plan\",\n    name: \"view\",\n    value: \"plan\",\n    onClick: handleViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"space_left\",\n    htmlFor: \"plan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Trip Planner \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom_space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"space_right\",\n    type: \"radio\",\n    id: \"locs\",\n    name: \"view\",\n    value: \"locs\",\n    onClick: handleViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"space_left\",\n    htmlFor: \"locs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Train Locations\"))), renderMainBody()));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/App.js"],"names":["React","useEffect","useState","axios","Route","Tracker","PositionMap","App","view","setView","stationList","setStationList","currentLocation","setCurrentLocation","stationNames","setStationNames","document","getElementById","checked","get","process","env","REACT_APP_RAIL_INFO_API","REACT_APP_SECRET","then","data","Stations","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","temp_dict","length","map","station","Code","Name","handleViewToggle","renderMainBody"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Route from './route.js'\nimport Tracker from './tracker.js'\nimport PositionMap from './positions.js'\nimport './App.css';\n\nconst App = () => {\n\n  const [view, setView] = useState('track')\n  const [stationList, setStationList] = useState([])\n  const [currentLocation, setCurrentLocation] = useState(null)\n  const [stationNames, setStationNames] = useState({})\n\n  useEffect(() => {\n    document.getElementById('track').checked = true\n  }, [])\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`)\n        .then((data) => setStationList(data.data.Stations));\n        \n    }, [])\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) =>{\n      setCurrentLocation({latitude: position.coords.latitude, longitude: position.coords.longitude})\n    })\n  }, [])\n\n  useEffect(() => {\n    var temp_dict = {}\n    if (stationList.length){\n      stationList.map((station) => {\n        temp_dict[station.Code] = station.Name\n      })\n\n      setStationNames(temp_dict)\n    }\n  }, [stationList])\n\n\n  const handleViewToggle = () => {\n    if(document.getElementById('track').checked){\n      setView('track')\n    }\n    else if (document.getElementById('plan').checked){\n      setView('plan')\n    }\n    else{\n      setView('loc')\n    }\n    \n  }\n\n \n  function renderMainBody() {\n    if (view === 'track') {\n      return(\n        <Tracker stationList={stationList} currentLocation={currentLocation}></Tracker>\n\n      )\n    }\n    else if( view=== 'loc'){\n      return(\n        <PositionMap></PositionMap>\n      )\n    }\n    else{\n      return(\n        <Route \n          stationList={stationList}\n          currentLocation={currentLocation}\n          start={'A06'}\n          end={'A09'}\n          stationNames={stationNames}>\n        </Route>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App row\">\n      <div className=''>\n        <div className='spacer title noBottom'>WMATA Live Train Tracker and Planner</div>\n        <div className='spacer column noBottom'>\n          <div className='bottom_space'>\n            <input type=\"radio\" id=\"track\" name=\"view\" value=\"track\" onClick={handleViewToggle}></input>\n            <label className=' space_left' htmlFor='track'>Train Tracker</label>\n          </div>\n          <div className='bottom_space'>\n            <input  className='space_right' type=\"radio\" id=\"plan\" name=\"view\" value=\"plan\" onClick={handleViewToggle}></input>\n            <label className='space_left' htmlFor='plan'>Trip Planner </label>\n          </div>\n          <div className='bottom_space'>\n            <input  className='space_right' type=\"radio\" id=\"locs\" name=\"view\" value=\"locs\" onClick={handleViewToggle}></input>\n            <label className='space_left' htmlFor='locs'>Train Locations</label>\n          </div>\n        </div>\n        {renderMainBody()}   \n      </div>    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}