{"ast":null,"code":"var _jsxFileName = \"/Users/leed/Documents/metro_tracker/src/route.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getDistance } from 'geolib';\nimport axios from 'axios';\nimport './App.css';\n\nconst Route = props => {\n  const [startStation, setStartStation] = useState(null);\n  const [endStation, setEndStation] = useState(null);\n  const [startStationName, setStartStationName] = useState(null);\n  const [endStationName, setEndStationName] = useState(null);\n  const [stationList, setStationList] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_ROUTE_API}/jPath?FromStationCode=${props.start}&ToStationCode=${props.end}&api_key=${process.env.REACT_APP_SECRET}`).then(balh => console.log(balh));\n  }, []);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`).then(data => setStationList(data.data.Stations));\n  }, []);\n\n  const handleStartSelect = event => {\n    stationList.map(station => {\n      if (station.Code === event.target.value) {\n        setStartStationName(station.Name);\n      }\n    });\n    setSelectedStation(event.target.value);\n  };\n\n  const handleEndSelect = event => {\n    stationList.map(station => {\n      if (station.Code === event.target.value) {\n        setEndStationName(station.Name);\n      }\n    });\n    setEndStation(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"this will be the route guide\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"bottom_space\",\n    htmlFor: \"stations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Select Station: \"), stationList.length && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"stations\",\n    id: \"stationSelect\",\n    onChange: handleStartSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    hidden: true,\n    style: {\n      display: 'none'\n    },\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), stationList.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: item.Code,\n      value: item.Code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 28\n      }\n    }, item.Name);\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"stations\",\n    id: \"stationSelect\",\n    onChange: handleEndSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    hidden: true,\n    style: {\n      display: 'none'\n    },\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), stationList.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: item.Code,\n      value: item.Code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }\n    }, item.Name);\n  }))), startStationName && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 38\n    }\n  }, startStationName), endStationName && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 36\n    }\n  }, endStationName)));\n};\n\nexport default Route;","map":{"version":3,"sources":["/Users/leed/Documents/metro_tracker/src/route.js"],"names":["React","useEffect","useState","getDistance","axios","Route","props","startStation","setStartStation","endStation","setEndStation","startStationName","setStartStationName","endStationName","setEndStationName","stationList","setStationList","get","process","env","REACT_APP_ROUTE_API","start","end","REACT_APP_SECRET","then","balh","console","log","REACT_APP_RAIL_INFO_API","data","Stations","handleStartSelect","event","map","station","Code","target","value","Name","setSelectedStation","handleEndSelect","length","display","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDistance } from 'geolib';\nimport axios from 'axios';\nimport './App.css';\n\nconst Route = props => {\n\n    const [startStation, setStartStation] = useState(null)\n    const [endStation, setEndStation] = useState(null)\n    const [startStationName, setStartStationName] = useState(null)\n    const [endStationName, setEndStationName] = useState(null)\n    const [stationList, setStationList] = useState([])\n\n\n\n\n\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_ROUTE_API}/jPath?FromStationCode=${props.start}&ToStationCode=${props.end}&api_key=${process.env.REACT_APP_SECRET}`)\n          .then((balh) => console.log(balh))\n      }, [])\n\n    useEffect(() => {\n    axios.get(`${process.env.REACT_APP_RAIL_INFO_API}/jStations?api_key=${process.env.REACT_APP_SECRET}`)\n        .then((data) => setStationList(data.data.Stations));\n    }, [])\n\n    const handleStartSelect = (event) => {stationList.map((station) => {\n        if (station.Code === event.target.value){\n            setStartStationName(station.Name)\n        }\n        })\n        setSelectedStation(event.target.value)\n        }\n\n    const handleEndSelect = (event) => {stationList.map((station) => {\n        if (station.Code === event.target.value){\n            setEndStationName(station.Name)\n        }\n        })\n        setEndStation(event.target.value)\n        }\n\n    return(\n        <div>\n            <div>this will be the route guide</div>\n            <div className='column spacer'>\n                <label className='bottom_space' htmlFor='stations'>Select Station: </label>\n            \n            \n                {stationList.length && (\n                <div>\n                    <select name='stations' id='stationSelect' onChange={handleStartSelect}>\n                <option selected disabled hidden style={{display: 'none'}} value=''></option>\n                {stationList.map((item) => {\n                    return(<option key={item.Code} value={item.Code}>{item.Name}</option>)\n                })}\n                </select> \n\n                <select name='stations' id='stationSelect' onChange={handleEndSelect}>\n                <option selected disabled hidden style={{display: 'none'}} value=''></option>\n                {stationList.map((item) => {\n                    return(<option key={item.Code} value={item.Code}>{item.Name}</option>)\n                })}\n                </select> \n                </div>\n                )\n                \n                \n                }\n                {startStationName && <div>{startStationName}</div>}\n                {endStationName && <div>{endStationName}</div>}\n\n            </div>           \n        </div>\n\n    )\n\n}\n\nexport default Route;"]},"metadata":{},"sourceType":"module"}